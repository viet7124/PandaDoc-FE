# ===============================================================
# == DATASOURCE CONFIGURATION
# ===============================================================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP (optimized for Cloud Run)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ===============================================================
# == JPA / HIBERNATE CONFIGURATION
# ===============================================================
# 
spring.jpa.hibernate.ddl-auto=validate
# Turn off SQL logging for production
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================================================
# == JWT CONFIGURATION
# ===============================================================
pandadocs.app.jwtSecret=${JWT_SECRET}
pandadocs.app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# ===============================================================
# == SERVER CONFIGURATION
# ===============================================================
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-stacktrace=never
# Trust X-Forwarded-* headers from Cloud Run reverse proxy (for HTTPS redirects)
server.forward-headers-strategy=native

# ===============================================================
# == FILE UPLOAD CONFIGURATION
# ===============================================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# ===============================================================
# == FIREBASE CONFIGURATION
# ===============================================================
firebase.credentials.path=${FIREBASE_CREDENTIALS_PATH}
firebase.storage.bucket=${FIREBASE_STORAGE_BUCKET}

# ===============================================================
# == PAYOS CONFIGURATION
# ===============================================================
payos.client-id=${PAYOS_CLIENT_ID}
payos.api-key=${PAYOS_API_KEY}
payos.checksum-key=${PAYOS_CHECKSUM_KEY}
payos.api-url=https://api-merchant.payos.vn/v2/payment-requests
payos.return-url=${PAYOS_RETURN_URL}
payos.cancel-url=${PAYOS_CANCEL_URL}
payos.webhook-url=${PAYOS_WEBHOOK_URL}

# ===============================================================
# == GOOGLE OAUTH2 CONFIGURATION
# ===============================================================
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

app.oauth2.frontend-redirect-url=${OAUTH2_FRONTEND_REDIRECT_URL}

# ===============================================================
# == CORS CONFIGURATION
# ===============================================================
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS}

# ===============================================================
# == LOGGING CONFIGURATION
# ===============================================================
logging.level.root=WARN
logging.level.com.pandadocs.api=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.mail=DEBUG
logging.level.com.sun.mail=DEBUG
logging.level.jakarta.mail=DEBUG

# ===============================================================
# == MAIL CONFIGURATION
# ===============================================================
spring.mail.host=${MAIL_HOST:smtp.sendgrid.net}
spring.mail.port=${MAIL_PORT:2525}
spring.mail.username=${MAIL_USERNAME:apikey}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2 TLSv1.3
spring.mail.properties.mail.smtp.connectiontimeout=10000
spring.mail.properties.mail.smtp.timeout=10000
spring.mail.properties.mail.smtp.writetimeout=10000
mail.from.email=${MAIL_FROM_EMAIL:pandadocs6204@gmail.com}
app.frontend.base-url=${FRONTEND_BASE_URL:http://localhost:5173}




